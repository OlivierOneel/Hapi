{"ast":null,"code":"var _jsxFileName = \"/Users/alexcaissy/Documents/Programming/CFC/FINAL/web_app/src/helper/helperComponents/GeoLocation.js\";\nimport React, { useState } from 'react';\nimport { Table } from 'reactstrap';\n\nconst GeoLocation = props => {\n  const [{\n    latitude,\n    longitude,\n    dispLat,\n    dispLon\n  }, setCoords] = useState({\n    latitude: \"Lat\",\n    longitude: \"Long\",\n    dispLat: \"Lat\",\n    dispLon: \"Long\"\n  });\n\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(getCoordinates, handleLocationError);\n      var x = document.querySelectorAll(\".locNoNumber\");\n\n      if (x.length) {\n        x[0].classList.remove(\"locNoNumber\");\n        x[0].classList.add(\"locNumber\");\n      }\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  };\n\n  const getCoordinates = position => {\n    console.log(position.coords.latitude);\n    console.log(position.coords.longitude);\n    setCoords({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude,\n      dispLat: Number(position.coords.latitude).toFixed(4),\n      dispLon: Number(position.coords.longitude).toFixed(4)\n    });\n  };\n\n  const handleLocationError = error => {\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        alert(\"User denied the request for Geolocation.\");\n        break;\n\n      case error.POSITION_UNAVAILABLE:\n        alert(\"Location information is unavailable.\");\n        break;\n\n      case error.TIMEOUT:\n        alert(\"The request to get user location timed out.\");\n        break;\n\n      case error.UNKNOWN_ERROR:\n        alert(\"An unknown error occurred.\");\n        break;\n\n      default:\n        alert(\"An unknown error occurred.\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"buttonHelperFirst\",\n    onClick: getLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Get Location\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    className: \"geoLoc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"locName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Latitute: \"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"locNoNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, dispLat)), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"locName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Longitude: \"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"locNoNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, dispLon))));\n};\n\nexport default GeoLocation;","map":{"version":3,"sources":["/Users/alexcaissy/Documents/Programming/CFC/FINAL/web_app/src/helper/helperComponents/GeoLocation.js"],"names":["React","useState","Table","GeoLocation","props","latitude","longitude","dispLat","dispLon","setCoords","getLocation","navigator","geolocation","getCurrentPosition","getCoordinates","handleLocationError","x","document","querySelectorAll","length","classList","remove","add","alert","position","console","log","coords","Number","toFixed","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Table } from 'reactstrap';\n\nconst GeoLocation = (props) => {\n\n    const [{ latitude, longitude, dispLat, dispLon }, setCoords] = useState({\n        latitude: \"Lat\", longitude: \"Long\", dispLat: \"Lat\", dispLon: \"Long\"\n    });\n\n    const getLocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(getCoordinates, handleLocationError);\n            var x = document.querySelectorAll(\".locNoNumber\");\n            if(x.length) {\n                x[0].classList.remove(\"locNoNumber\");\n                x[0].classList.add(\"locNumber\")\n            }\n            \n        } else {\n            alert(\"Geolocation is not supported by this browser.\");\n        }\n    }\n    const getCoordinates = (position) => {\n        console.log(position.coords.latitude)\n        console.log(position.coords.longitude)\n        setCoords({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n            dispLat: Number(position.coords.latitude).toFixed(4),\n            dispLon: Number(position.coords.longitude).toFixed(4),\n        })\n    }\n    const handleLocationError = (error) => {\n        switch (error.code) {\n            case error.PERMISSION_DENIED:\n                alert(\"User denied the request for Geolocation.\")\n                break;\n            case error.POSITION_UNAVAILABLE:\n                alert(\"Location information is unavailable.\")\n                break;\n            case error.TIMEOUT:\n                alert(\"The request to get user location timed out.\")\n                break;\n            case error.UNKNOWN_ERROR:\n                alert(\"An unknown error occurred.\")\n                break;\n            default:\n                alert(\"An unknown error occurred.\")\n        }\n    };\n\n\n    return (\n        <div>\n            <button className=\"buttonHelperFirst\" onClick={getLocation}>Get Location</button>\n            <br/>\n            <Table className=\"geoLoc\">\n                <tr>\n                    <td className=\"locName\">Latitute: </td>\n                    <td className=\"locNoNumber\">{dispLat}</td>\n                </tr>\n                <tr>\n                    <td className=\"locName\">Longitude: </td>\n                    <td className=\"locNoNumber\">{dispLon}</td>\n                </tr>\n\n\n            </Table>\n\n        </div>\n    )\n\n}\n\nexport default GeoLocation;"]},"metadata":{},"sourceType":"module"}